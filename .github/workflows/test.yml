name: Terraform Tests
on:
  push:
    branches:
      - '*'
  # pull_request:
  #   branches:
  #     - 'main'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: '2c7dadc2-5dba-4670-b798-27d59a430217'
  ARM_CLIENT_SECRET: ${{ secrets.TGO_ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: 'e5c064d7-9c8f-4e8d-ba57-5da9f1610cb3'
  ARM_TENANT_ID: 'ea7c73d0-fb18-4161-8331-8341717ba99c'
  TF_CLI_VERSION: '1.0.9'
  AZURE_TENANT_ID: ${{ env.ARM_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
  AZURE_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
jobs:
  # tflint:
  terrascan:
    runs-on: ubuntu-latest
    name: terrascan-action
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      # https://github.com/marketplace/actions/terrascan-iac-scanner
    - name: Run Terrascan
      id: terrascan
      uses: accurics/terrascan-action@main
      with:
        iac_type: 'terraform'
        iac_version: 'v14'
        policy_type: 'azure'
        only_warn: true
        verbose: true
        sarif_upload: true
        #non_recursive:
        iac_dir: /
        #policy_path:
        #skip_rules:
        #config_path:
        #find_vulnerabilities:
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: terrascan.sarif

  terratest_job:
    runs-on: ubuntu-latest
    name: terratest-action
    # env:
    #   AZURE_TENANT_ID: ${{ env.ARM_TENANT_ID }}
    #   AZURE_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
    #   AZURE_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
    #   AZURE_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false
        terraform_version: ${{ env.TF_CLI_VERSION }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Setup Dependencies
      working-directory: tests
      #run:  go get -v -t -d && go mod tidy
      run: go mod init tests

    - name: Test
      working-directory: tests
      run: go test -v
